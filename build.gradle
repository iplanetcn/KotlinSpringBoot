import org.gradle.api.tasks.wrapper.Wrapper.DistributionType

buildscript {
    ext {
        kotlinVersion = '1.1.51'
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'



version = '1.0.0'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    jcenter()
    mavenCentral()
}


jar {
    baseName = 'kotlin-spring-boot-rest-service'
    version = '1.0.0'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
    runtime('mysql:mysql-connector-java')
    testCompile('junit:junit')
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
    distributionType = DistributionType.ALL

}

springBoot {
    mainClass = 'com.phenix.KotlinSpringBootApplicationKt'
}